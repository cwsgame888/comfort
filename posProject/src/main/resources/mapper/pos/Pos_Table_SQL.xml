<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pos.mapper.PosTableMapper">
	<select id="selectTableList" parameterType="com.core.common.map.DataMap" resultType="com.core.common.map.DataMap">
		SELECT
			TABLE_ROW
			, TABLE_COL
			, TABLE_NAME
			, TABLE_STATE
			, TABLE_LAST_UPDATE
		FROM
			POS_TABLE
		<if test="tableState != null and tableState != ''">
		WHERE
			TABLE_STATE = #{tableState}
		</if>
	</select>
	
	<insert id="insertTable" parameterType="com.core.common.map.DataMap">
		INSERT INTO POS_TABLE (
				TABLE_ROW
				, TABLE_COL
				, TABLE_NAME
				, TABLE_STATE
				, TABLE_LAST_UPDATE
				) 
			VALUES (
				#{row}
				, #{col}
				, #{tableName}
				, #{tableState}
				, TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
			)
	</insert>
	
	<update id="updateTable" parameterType="com.core.common.map.DataMap">
		UPDATE POS_TABLE SET 
			TABLE_NAME = #{tableName}
			, TABLE_STATE = #{tableState}
			, TABLE_LAST_UPDATE = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
		WHERE TABLE_ROW = #{row} AND TABLE_COL = #{col}
	</update>
	
	<delete id="deleteTable" parameterType="com.core.common.map.DataMap">
		DELETE FROM POS_TABLE WHERE TABLE_ROW = #{row} AND TABLE_COL = #{col}
	</delete>
	
	<!-- 현재 테이블 주문 중 정보 -->
	<select id="selectOrderList" parameterType="com.core.common.map.DataMap" resultType="com.core.common.map.DataMap">
		SELECT TABLE_ROW
			, TABLE_COL
			, ORDER_NUM
			, ORDER_STATE
			, ORDER_AMOUNT
			, ORDER_HEAD_COUNT
			, ORDER_AGE 
			, ORDER_TIME
			, ORDER_LAST_UPDATE
		FROM POS_ORDER WHERE ORDER_STATE = 'ORDERING'
	</select>

	<!-- 당일 전체 정보 -->
	<select id="selectAllOrderInfo" parameterType="com.core.common.map.DataMap" resultType="com.core.common.map.DataMap">
		SELECT BEFORE_PAYMENT_AMOUNT
			, PAYMENT_AMOUNT
			, TOTAL_HEAD_COUNT
			, CASE TOTAL_HEAD_COUNT
				WHEN 0 THEN 0
				ELSE NVL(ROUND(PAYMENT_AMOUNT/TOTAL_HEAD_COUNT), 0)
				END AS CUSTOMER_TRANSACTION
			, SERVICE_AMOUNT 
		FROM (
			SELECT 
				(SELECT NVL(SUM(ORDER_AMOUNT), 0)
					FROM POS_ORDER 
					WHERE SUBSTR(ORDER_NUM,0,8) = TO_CHAR(SYSDATE,'YYYYMMDD') AND ORDER_STATE = 'ORDERING') AS BEFORE_PAYMENT_AMOUNT
				, (SELECT NVL(SUM(PAYMENT_AMOUNT), 0)
					FROM POS_PAYMENT 
					WHERE SUBSTR(ORDER_NUM,0,8) = TO_CHAR(SYSDATE,'YYYYMMDD')) AS PAYMENT_AMOUNT
				, (SELECT NVL(SUM(ORDER_HEAD_COUNT), 0)
					FROM POS_ORDER WHERE SUBSTR(ORDER_NUM,0,8) = TO_CHAR(SYSDATE,'YYYYMMDD') AND ORDER_STATE != 'CANCEL') AS TOTAL_HEAD_COUNT
				, (SELECT NVL(SUM(SERVICE_AMOUNT), 0) 
					FROM (SELECT SUM(
								CASE DISCOUNT_KIND 
									WHEN 'PERCENT' THEN TO_NUMBER(ORDER_AMOUNT * DISCOUNT_VALUE / 100) 
									ELSE TO_NUMBER(DISCOUNT_VALUE)
								END) AS SERVICE_AMOUNT
							FROM POS_PAYMENT
							WHERE SUBSTR(ORDER_NUM,0,8) = TO_CHAR(SYSDATE,'YYYYMMDD')
						UNION
						SELECT SUM(TO_NUMBER(B.MENU_PRICE)) AS SERVICE_AMOUNT 
							FROM POS_ORDER_MENU A
							JOIN POS_MENU B ON A.MENU_ID = B.MENU_ID
							WHERE A.ORDER_MENU_STATE = 'SERVICE' AND SUBSTR(ORDER_NUM,0,8) = TO_CHAR(SYSDATE,'YYYYMMDD'))
					) AS SERVICE_AMOUNT
			FROM DUAL
        )
	</select>

	<!-- 테이블 이동 -->
	<update id="updateMoveOrderTable" parameterType="com.core.common.map.DataMap">
		UPDATE POS_ORDER SET
			TABLE_ROW = #{TABLE_ROW}
			, TABLE_COL = #{TABLE_COL}
		WHERE ORDER_NUM = #{ORDER_NUM}
	</update>
	
	<!-- 테이블 합치기 -->
	<update id="updateSumOrderTable" parameterType="com.core.common.map.DataMap">
		UPDATE POS_ORDER_MENU SET
			ORDER_NUM = #{MOVE_TO_ORDER_NUM}
		WHERE ORDER_NUM = #{MOVE_FROM_ORDER_NUM}
	</update>
	
	<!-- 테이블 합친 후 합쳐진 테이블은 삭제 -->
	<delete id="deleteSumOrderTable" parameterType="com.core.common.map.DataMap">
		DELETE FROM POS_ORDER
		WHERE ORDER_NUM = #{MOVE_FROM_ORDER_NUM}
	</delete>
</mapper>